{"version":3,"sources":["api/GraphCountries.js","components/NotFound.js","components/CountriesList.js","components/SearchField.js","pages/Home.js","pages/About.js","components/CountryForm.js","pages/Details.js","components/Header.js","App.js","reportWebVitals.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["GraphCountries","fetch","method","headers","body","JSON","stringify","query","then","res","json","NotFound","props","className","text","CountriesList","self","this","countries","length","response","dispatch","type","payload","data","Country","map","item","onClick","findCountry","alpha3Code","exact","to","flag","emoji","name","React","Component","connect","state","placeholder","onChange","event","target","value","searchCountries","Home","About","CountryForm","buttonText","capital","area","population","countryId","errors","fieldError","setState","formIsValid","setTimeout","formValid","fields","htmlFor","handleInputChange","bind","id","required","handleSave","selectedCountry","undefined","width","alt","src","svgFile","topLevelDomains","Header","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","createStore","action","originalCountries","inputValue","filtered","filter","toLowerCase","indexOf","param","find","mutatedCountry","mutatedCountries","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.5e6e50cd.chunk.js","sourcesContent":["const GraphCountries = {\n    fetch() {\n       return fetch('https://countries-274616.ew.r.appspot.com', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ query: `\n            query {\n                Country {\n                    flag {\n                        emoji\n                        emojiUnicode\n                        svgFile\n                    },\n                    name,\n                    capital,\n                    area,\n                    population,\n                    topLevelDomains {\n                        name\n                    },\n                    alpha3Code,\n                }\n            }\n            ` }),\n            })\n            .then(res => res.json())\n    },\n}\n\nexport default GraphCountries;","import './styles/atoms/not-found.css';\n\nconst NotFound = props => (<h4 className=\"not-found\">{props.text}</h4>)\n\nexport default NotFound;","\nimport GraphCountries from '../api/GraphCountries';\nimport React from \"react\";\nimport {connect} from \"react-redux\";\nimport {\n    Link\n} from 'react-router-dom';\nimport './styles/organisms/countries-list.css';\nimport NotFound from './NotFound';\n\nclass CountriesList extends React.Component {\n    componentDidMount() {\n        const self = this;\n        if(self.props.countries.length == 0) {\n            GraphCountries.fetch().then((response)=> {\n                self.props.dispatch({\n                    type: 'get_countries',\n                    payload: response.data.Country\n                })\n            })\n        } else {\n            this.props.dispatch({\n                type: 'refresh_countries'\n            });\n        }\n    }\n\n    findCountry(payload) {\n        return {\n            'type':'find_country',\n            'payload':payload\n        }\n    }\n\n    render() {\n\n        if(this.props.countries.length === 0 ) {\n            return <NotFound text=\"Nenhum país encontrado\" />\n        }\n\n        return (\n            <ul className=\"countries-list\">\n                { this.props.countries.map((item) => <li key={item.alpha3Code}>\n                    <Link onClick={()=> this.props.dispatch(this.findCountry(item.alpha3Code))} exact=\"true\" to={ \"/react-countries/countries/\"+item.alpha3Code}>{item.flag.emoji} {item.name}</Link>\n                </li>)  }\n            </ul>\n        )\n    }\n};\n\nexport default  connect(state => ({countries : state.countries}))(CountriesList) ;","import { connect } from \"react-redux\";\nimport './styles/atoms/search-field.css';\n\nconst searchCountries = (event, dispatch) =>  {\n    dispatch({\n      type: 'search_countries',\n      payload: event.target.value\n    });\n  }\n\nconst SearchField = ({dispatch}) => {\n    return (\n        <div className=\"search-field\">\n            <input placeholder=\"Buscar país\" onChange={ (event) => searchCountries(event, dispatch)} type=\"text\" />\n        </div>\n    )\n}\n\n\nexport default connect((state) => ({dispatch: state.dispatch}))(SearchField)\n","import CountriesList from '../components/CountriesList';\nimport SearchField from '../components/SearchField';\n\nfunction Home()\n{\n  return(\n    <div className=\"App\">\n      <SearchField />\n      <CountriesList />\n  </div>\n  )\n}\n\nexport default Home;\n","function About()\n{\n  return (\n    <div className=\"App\">\n      <h4>About</h4>\n    </div>\n  )\n}\n\nexport default About;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport './styles/organisms/country-form.css';\n\n\nclass CountryForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            buttonText: 'Salvar',\n            name: null,\n            capital: null,\n            area: null,\n            population: null,\n            alpha3Code: props.countryId,\n            errors : {}\n        }\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const name = target.name;\n        let value = target.value;\n\n        let errors = this.state.errors;\n\n        let fieldError = {\n            [name] : ''\n        };\n\n        this.setState({\n            [name]: value,\n            errors: {\n                ...errors,\n                ...fieldError\n            }\n        })\n    }\n\n    handleSave() {\n        let data = this.state;\n        let self= this;\n\n        if(this.formIsValid()) {\n            self.setState({\n                buttonText: 'Salvo!'\n            })\n\n            setTimeout(() => {\n                self.setState({\n                    buttonText: 'Salvar'\n                })\n            }, 3000)\n\n            this.props.dispatch({\n                type: 'update_country',\n                payload: data,\n            })\n        }\n    }\n\n    formIsValid() {\n        let formValid =  true;\n        let fields = this.state;\n        let errors = {};\n\n        if(fields.population === null || fields.population === \"\") {\n            errors['population'] = \"População não pode ser vazio\";\n            formValid =  false;\n        }\n\n        if(fields.name === null || fields.name === \"\") {\n            errors['name'] = \"Nome não pode ser vazio\";\n            formValid =  false;\n        }\n\n        if(fields.area === null || fields.area === \"\") {\n            errors['area'] = \"Área não pode ser vazio\";\n            formValid =  false;\n        }\n\n        if(fields.capital === null || fields.capital === \"\") {\n            errors['capital'] = \"Capital não pode ser vazio\";\n            formValid =  false;\n        }\n\n        this.setState({errors:errors});\n        return formValid;\n    }\n\n    render() {\n        return (\n            <form className=\"country-form\">\n                <legend>Editar País</legend>\n                <hr />\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Nome</label>\n                    <input onChange={this.handleInputChange.bind(this)} id=\"name\" type=\"text\" name=\"name\" />\n                    <small className=\"error\">{this.state.errors[\"name\"]}</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"capital\">Capital</label>\n                    <input required onChange={this.handleInputChange.bind(this)} id=\"capital\" type=\"text\" name=\"capital\" />\n                    <small className=\"error\">{this.state.errors[\"capital\"]}</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"area\">Área</label>\n                    <input required onChange={this.handleInputChange.bind(this)} id=\"area\" type=\"text\" name=\"area\" />\n                    <small className=\"error\">{this.state.errors[\"area\"]}</small>\n                </div>\n               \n                <div className=\"form-group\">\n                    <label htmlFor=\"population\">População</label>\n                    <input required onChange={this.handleInputChange.bind(this)} id=\"population\" type=\"number\" name=\"population\" />\n                    <small className=\"error\">{this.state.errors[\"population\"]}</small>\n                </div>\n                <div className=\"form-group\">\n                    <button onClick={this.handleSave.bind(this)} type=\"button\">{this.state.buttonText}</button>\n                </div>\n            </form>\n        )\n    }\n}\n\nexport default connect(state => ( {dispatch:state.dispatch}))(CountryForm);","import {connect} from \"react-redux\";\nimport CountryForm from \"../components/CountryForm\";\nimport { Redirect } from 'react-router-dom';\nimport '../components/styles/templates/details.css'\n\nfunction Details(state)\n{\n  if(state.selectedCountry.alpha3Code === undefined) {\n    return (\n      <Redirect to=\"/\" />\n    );\n  }\n\n  return (\n    <div className=\"App\">\n        <div className=\"details\">\n          <img width=\"200\" alt={state.selectedCountry.name} src={state.selectedCountry.flag.svgFile} />\n          <h4 className=\"title\">{state.selectedCountry.name}</h4>\n          <ul className=\"list-info\">\n              <li>Capital: {state.selectedCountry.capital}</li>\n              <li>População: {state.selectedCountry.population}</li>\n              <li>Area: {state.selectedCountry.area} km<sup>2</sup></li>\n              <li>\n                  Domínios:\n                  <ul>\n                      {state.selectedCountry.topLevelDomains.map((item)=> <li key={item.name}>{item.name}</li>)}\n                  </ul>\n              </li>\n          </ul>\n        <CountryForm countryId={state.selectedCountry.alpha3Code} />\n        </div>\n     \n    </div>\n  )\n}\n\nexport default  connect(state=> ({ selectedCountry : state.selectedCountry}))(Details) ;","import {\n    Link\n} from 'react-router-dom';\n\nconst Header = () => {\n    return (\n        <nav>\n            <ul>\n                <li>\n                    <Link exact=\"true\" to=\"/react-countries\">Home</Link>\n                </li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Header;","import React from \"react\";\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\nimport Details from \"./pages/Details\";\nimport Header from \"./components/Header\";\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Header />\n        <Switch>\n            <Route path=\"/react-countries/countries/:countryId\">\n              <Details />\n            </Route>\n            <Route path=\"/react-countries\">\n              <Home />\n            </Route>\n          </Switch>\n      </div>\n    </Router>\n  );\n}\n\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\n    countries: [],\n    selectedCountry: {},\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case 'get_countries': {\n            return {\n                ...state,\n                countries: [\n                    ...action.payload\n                ],\n                originalCountries: [\n                    ...action.payload\n                ]\n            }\n        };\n\n        case 'search_countries': {\n            let inputValue = action.payload;\n            if (inputValue.length == '') {\n                return {\n                    ...state,\n                    countries: [\n                        ...state.originalCountries\n                    ]\n                };\n            } else {\n                state.countries = state.originalCountries;\n            }\n\n            if (inputValue.length >= 3) {\n                let filtered = state.countries.filter((item) => {\n                    let criteria = item.name.toLowerCase().indexOf(inputValue.toLowerCase(), 0);\n                    return criteria > -1;\n                })\n                return {\n                    ...state,\n                    countries: [\n                        ...filtered\n                    ]\n                }\n            }\n        }\n\n        case 'find_country': {\n            let param = action.payload;\n\n            let item = state.countries.find((item) => {\n                let criteria = item.alpha3Code.toLowerCase().indexOf(param.toLowerCase(), 0);\n                return criteria > -1;\n            });\n\n            return {\n                ...state,\n                selectedCountry: {\n                    ...item\n                }\n            }\n        }\n\n        case 'refresh_countries' : {\n            return {\n                ...state,\n                countries: [\n                    ...state.originalCountries\n                ]\n            }\n            \n        }\n\n        case 'update_country': {\n            let payload = action.payload;\n            let mutatedCountry = {};\n            let mutatedCountries = state.originalCountries.map((item) => {\n                if (item.alpha3Code != payload.alpha3Code) {\n                    return item;\n                } else {\n                    mutatedCountry = {\n                        ...item,\n                        ...payload\n                    };\n                }\n\n                return {\n                    ...item,\n                    ...payload\n                }\n            });\n\n            return {\n                ...state,\n                countries: [\n                    ...mutatedCountries\n                ],\n                originalCountries: [\n                    ...mutatedCountries\n                ],\n                selectedCountry: {\n                    ...mutatedCountry\n                }\n            }\n            \n        }\n\n\n        default:\n            return state;\n    }\n}\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}